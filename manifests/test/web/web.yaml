---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: web
  labels: { app: web }
spec:
  replicas: 2
  selector:
    matchLabels: { app: web }
  template:
    metadata:
      labels: { app: web }
    spec:
      # imagePullSecrets: [{ name: ghcr-pull-secret }]  # public 이미지면 주석 유지
      nodeSelector:
        ng: "web"
      containers:
        - name: web
          image: "{{
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: WAS_BASE_URL
              value: "http://was.web.svc.cluster.local:8000"
          readinessProbe:
            httpGet: { path: /, port: 8080 }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /, port: 8080 }
            initialDelaySeconds: 15
            periodSeconds: 20
        - name: nginx-sidecar
          image: nginx:1.25-alpine
          args: ["nginx","-g","daemon off;"]
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-sidecar-conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-sidecar-conf
  namespace: web
data:
  default.conf: |
    server {
      listen 8081;
      location /was/ {
        proxy_pass http://was.was.svc.cluster.local:8000/;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: web-svc
  namespace: web
  labels: { app: web }
spec:
  selector: { app: web }
  ports:
    - name: http
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ing
  namespace: web
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing   # 내부 ALB 원하면 'internal'
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /
    # external-dns.alpha.kubernetes.io/hostname: web.your-domain.com
spec:
  rules:
    - host: web.your-domain.com   # Route53에서 ExternalDNS가 자동 레코드 생성
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-svc
                port:
                  number: 80
