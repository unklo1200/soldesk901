apiVersion: v1
kind: Namespace
metadata:
  name: web
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deploy
  namespace: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      imagePullSecrets:
        - name: ghcr-pull-secret   # TODO: GHCR 프라이빗 토큰으로 미리 생성
      containers:
        - name: web
          image: ghcr.io/unklo1200/web-php
          ports:
            - containerPort: 80
          env:
            # 내부 NLB를 가리키는 URL(ExternalName 서비스)
            - name: WAS_BASE_URL
              value: "http://was-nlb.web.svc.cluster.local:8000"
          readinessProbe:
            httpGet: { path: /healthz, port: 80 }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /healthz, port: 80 }
            initialDelaySeconds: 10
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: web-svc
  namespace: web
spec:
  type: ClusterIP
  selector:
    app: web
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ing
  namespace: web
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-svc
                port:
                  number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: was-nlb
  namespace: web
spec:
  type: ExternalName
  externalName: placeholder.internal-nlb-dns.example.com  # TODO: NLB DNS로 교체