apiVersion: v1
kind: Namespace
metadata:
  name: was
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: was-sa
  namespace: was
imagePullSecrets:
  - name: ghcr-pull-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
  namespace: was
type: Opaque
stringData:
  DB_PASSWORD: "adminadmin"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-config
  namespace: was
data:
  DB_HOST: "test.cl6k4y6qsqhk.ap-northeast-2.rds.amazonaws.com"
  DB_NAME: "test"
  DB_USER: "admin"
  DB_PORT: "3306"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: was-deploy
  namespace: was
spec:
  replicas: 2
  selector:
    matchLabels:
      app: was
  template:
    metadata:
      labels:
        app: was
    spec:
      imagePullSecrets:
        - name: ghcr-pull-secret   # TODO: GHCR 프라이빗 토큰으로 미리 생성
      containers:
        - name: was
          image: ghcr.io/unklo1200/was-api
          ports:
            - containerPort: 8000
          env:
            - name: DB_HOST
              valueFrom: { configMapKeyRef: { name: db-config, key: DB_HOST } }
            - name: DB_NAME
              valueFrom: { configMapKeyRef: { name: db-config, key: DB_NAME } }
            - name: DB_USER
              valueFrom: { configMapKeyRef: { name: db-config, key: DB_USER } }
            - name: DB_PORT
              valueFrom: { configMapKeyRef: { name: db-config, key: DB_PORT } }
            - name: DB_PASSWORD
              valueFrom: { secretKeyRef: { name: db-secret, key: DB_PASSWORD } }
          readinessProbe:
            httpGet: { path: /api/health, port: 8000 }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /api/health, port: 8000 }
            initialDelaySeconds: 10
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: was-nlb
  namespace: was
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    # (선택) 크로스존 활성화
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    # (선택) 헬스체크 HTTP로 지정
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "HTTP"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "8000"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/api/health"
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 8000         # NLB가 노출하는 포트
      targetPort: 8000   # 컨테이너 포트
      protocol: TCP
  selector:
    app: was
