apiVersion: v1
kind: Secret
metadata:
  name: was-db-secret
  namespace: was
  labels:
    app.kubernetes.io/name: was
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: projecteks
    app.kubernetes.io/managed-by: argocd
    app: was
type: Opaque
stringData:
  DB_HOST: "test.c0feiu04cr8o.us-east-1.rds.amazonaws.com"
  DB_NAME: "test2"
  DB_USER: "awslearner"
  DB_PASSWORD: "awslearner"
---
# 2) WAS Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: was
  namespace: was
  labels:
    app.kubernetes.io/name: was
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: projecteks
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/version: "1.0.0"
    app: was
spec:
  replicas: 2
  selector:
    matchLabels: { app: was }
  template:
    metadata:
      labels:
        app.kubernetes.io/name: was
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: projecteks
        app.kubernetes.io/managed-by: argocd
        app: was
    spec:
      imagePullSecrets:
        - name: ghcr-pull-secret
      nodeSelector:
        role: was
      tolerations:
        - key: "role"
          operator: "Equal"
          value: "was"
          effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: role
                    operator: In
                    values: ["was"]
      containers:
        - name: was
          image: ghcr.io/unklo1200/was-updated:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          envFrom:
            - secretRef:
                name: was-db-secret
          readinessProbe:
            httpGet:
              path: /api/health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
# 3) WAS NLB(Service) — 내부 NLB로 ExternalDNS가 was.projecteks.local을 생성
apiVersion: v1
kind: Service
metadata:
  name: was
  namespace: was
  labels:
    app.kubernetes.io/name: was
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: projecteks
    app.kubernetes.io/managed-by: argocd
    app: was
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internal"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
spec:
  type: LoadBalancer
  selector: { app: was }
  ports:
    - name: http
      port: 8000
      targetPort: 8000
