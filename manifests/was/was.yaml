apiVersion: v1
kind: Secret
metadata:
  name: was-db-secret
  namespace: was
type: Opaque
data:
  # base64 인코딩 값입니다. (echo -n '값' | base64)
  DB_HOST: dGVzdC5jbDZrNHk2cXNxaGsuYXAtbm9ydGhlYXN0LTIucmRzLmFtYXpvbmF3cy5jb20=
  DB_NAME: dGVzdA==
  DB_USER: YWRtaW4=
  DB_PASSWORD: YWRtaW5hZG1pbg==   # 'your passwd' (공개 저장소라면 보안상 Secret은 Git에 올리지 않는게 좋습니다)

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: was
  namespace: was
  labels: { app: was }
spec:
  replicas: 2
  selector:
    matchLabels: { app: was }
  template:
    metadata:
      labels: { app: was }
    spec:
      nodeSelector:
        role: "was"
      tolerations:
        - key: "role"
          operator: "Equal"
          value: "was"
          effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "role"
                    operator: In
                    values: ["was"]
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values: ["was"]
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: was
          image: ghcr.io/unklo1200/was-updated
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          envFrom:
            - secretRef:
                name: was-db-secret
          ports:
            - name: http
              containerPort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: was
  namespace: was
  labels: { app: was }
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internal"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
spec:
  type: LoadBalancer
  selector: { app: was }
  ports:
    - name: http
      port: 8000
      targetPort: 8000