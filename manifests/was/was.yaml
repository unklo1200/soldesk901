apiVersion: v1
kind: Secret
metadata:
  name: was-db-secret
  namespace: was
type: Opaque
data:
  # base64 인코딩 값입니다. (echo -n '값' | base64)
  DB_HOST: dGVzdC5jbDZrNHk2cXNxaGsuYXAtbm9ydGhlYXN0LTIucmRzLmFtYXpvbmF3cy5jb20=
  DB_NAME: dGVzdA==
  DB_USER: YWRtaW4=
  DB_PASSWORD: YWRtaW5hZG1pbg==   # 'your passwd' (공개 저장소라면 보안상 Secret은 Git에 올리지 않는게 좋습니다)

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: was-deploy
  namespace: was
  labels:
    app: was
spec:
  replicas: 2
  selector:
    matchLabels:
      app: was
  template:
    metadata:
      labels:
        app: was
    spec:
      # GHCR가 private일 때 필요
      imagePullSecrets:
        - name: ghcr-pull-secret
      containers:
        - name: was
          image: ghcr.io/unklo1200/was-api
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          envFrom:
            - secretRef:
                name: was-db-secret
          # 애플리케이션이 제공하는 헬스 엔드포인트 사용
          readinessProbe:
            httpGet:
              path: /api/health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /api/health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: "500m"
              memory: 512Mi

---
apiVersion: v1
kind: Service
metadata:
  name: was
  namespace: was
  labels: { app: was }
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internal"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
spec:
  type: LoadBalancer
  selector: { app: was }
  ports:
    - name: http
      port: 8000
      targetPort: 8000